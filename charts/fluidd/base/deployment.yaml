apiVersion: apps/v1
kind: Deployment
metadata:
  name: octoprint
spec:
  replicas: 1
  revisionHistoryLimit: 1
  template:
    spec:
      # nodeSelector:
      #   dedicated: 3dprinter
      # tolerations:
      #   - key: "dedicated"
      #     value: "3dprinter"
      #     effect: "NoSchedule"
      containers:
      - name: octoprint
        image: octoprint/octoprint:1.8.6
        env:
          - name: ENABLE_MJPG_STREAMER
            value: 'false'
        ports:
          - name: http
            containerPort: 5000
        securityContext: {}
       #   runAsUser: 1000
       #   runAsGroup: 1000
       #   allowPrivilegeEscalation: false
       #   capabilities:
       #     drop:
       #       - all
       #   readOnlyRootFilesystem: true
       #   runAsNonRoot: true
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
          requests:
            memory: 2000Mi
            cpu: 1000m
          limits:
            memory: 3500Mi
            cpu: 2000m
        volumeMounts:
          - mountPath: /octoprint
            name: octoprint
            readOnly: false
          - name: data
            mountPath: /home/octoprint/.octoprint
          - mountPath: /dev/ttyUSB0
            name: ttyusb0
            readOnly: false
          - mountPath: /dev/ttyACM0
            name: ttyacm0
            readOnly: false
          - mountPath: /dev/video0
            name: video0
            readOnly: false
      serviceAccountName: octoprint-sa
      volumes:
        - name: octoprint
          persistentVolumeClaim:
            claimName: octoprint
        - name: data
          emptyDir: {}
        - name: ttyusb0
          hostPath:
            path: "/dev/ttyUSB0"
        - name: ttyacm0
          hostPath:
            path: "/dev/ttyACM0"
        - name: video0
          hostPath:
            path: /dev/video0
